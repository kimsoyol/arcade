calculator, tic-tac-toe, weather, memory, calculator, todo


 fetch(`https://api.ipgeolocation.io/ipgeo?apiKey=d36f7c8b667e44728f061f5ac22a1b95`)
            .then(res => res.json())
            .then(data => {
              setUserLocation({'lat': Math.trunc(data.latitude), 'lon':  Math.trunc(data.longitude)})
            })
            .catch(err => console.log(err))








             {weather.daily.map((day) => (
                    <Daily
                      key={day.dt}

                      time={day.dt}
                      dayTemp={day.temp.day}
                      nightTemp={day.temp.night}
                      condition={day.weather[0].main}
                      icon={day.weather[0].icon}
                      humidity={day.humidity}
                      unit={tempUnit}
                      pop={day.pop}
                      windSpeed={day.wind_speed}
                    />
                  ))}




  useEffect(() => {
    async function fetchSearchLocation(searchLocation) {
      const res = await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${searchLocation}&appid=67d03874040b2f71abfe5074fadcb19e`)
      const data = await res.json()
      setFetchedLocation(data[0])
      console.log('Fetch search location')
    }

    async function fetchWeather(lat,lon) {
      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=13&lon=100&appid=67d03874040b2f71abfe5074fadcb19e`)
      const data = await res.json()
      setWeather(data)
      console.log('Fetch weather')
      setLoading(false)
    }
    if (searchLocation) {
      fetchSearchLocation(searchLocation)
    }

    if (!fetchedLocation){
      setLoading(true)
    } else {
      const lat = Math.trunc(fetchedLocation.lat)
      const lon = Math.trunc(fetchedLocation.lon)

      fetchWeather(lat, lon)
    }
   //
    console.log('search & weather effect')
  },[searchLocation])

  const handleSearch = (e) => {
    if (e.key === "Enter" && e.target.value !== '') {
      console.log('Search')
      e.preventDefault()
      setSearchLocation(e.target.value)
      e.target.value = ''
    }
  }







  i async function fetchUserLocation() {
         try {
           const res = await fetch(`https://api.ipgeolocation.io/ipgeo?apiKey=d36f7c8b667e44728f061f5ac22a1b95`);
           const data = await res.json();
           setUserLocation(data);
           setLoading(false); // Set loading to false after fetching is complete
           console.log('fetch user location');
         } catch (error) {
           setError(error);
           setLoading(false); // Set loading to false even if there's an error
         }
       }

       fetchUserLocation();mport axios from 'axios';














  useEffect(() => {
    axios
      .get(
        `https://api.ipgeolocation.io/ipgeo?apiKey=24b507003ddc4873b85a3f3dba2d2b8e`,
      )
      .then((res) => {
        let lat = Math.trunc(res.data.latitude);
        let lon = Math.trunc(res.data.longitude);
        setLocation({
          name: res.data.country_capital,
          country: res.data.country_name,
        });
        console.log("Fetched user location");
        return axios.get(
          `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=alerts,minutely,hourly&appid=c93fd1817f3fbe42aeac0a63076603b9`,
        );
      })
      .then((res) => {
        setWeather(res.data);
        setLoading(false);
        console.log("Fetched weather data");
      })
      .catch((err) => {
        console.log(err.message);
        setLoading(false);
      });
    console.log("userLocation effect run");
  }, []);

  useEffect(() => {
    if (weather.current) {
      changeBg(weather.current.weather[0].main);
    }
    if (searchLocation) {
      console.log(searchLocation);
    }
    console.log("Changed bg");
  }, [weather]);

  const handleSearch = () => {
    if (searchLocation) {
      setLoading(true);
      axios
        .get(
          `https://api.openweathermap.org/data/2.5/weather?q=${searchLocation}&appid=e5f1433f9a897309c61c34e095ff80d9`,
        )
        .then((res) => {
          let lat = Math.trunc(res.data.coord.lat);
          let lon = Math.trunc(res.data.coord.lon);
          setLocation({
            name: res.data.name,
            country: regionNamesInEnglish.of(res.data.sys.country),
          });
          return axios.get(
            `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=alerts,minutely,hourly&appid=c93fd1817f3fbe42aeac0a63076603b9`,
          );
        })
        .then((res) => {
          setWeather(res.data);
          setLoading(false);
          console.log("search and fetch");
        })
        .catch((err) => {
          setError(err.response.data.message);
          setLoading(false);
        });
    }
    setSearchLocation("");
    console.log("Search location");
  };